// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum MediaType {
  MOVIE
  VIDEOGAME
  MUSIC
  BOOK
}

enum Role {
  USER
  ADMIN
}

model User {
  id                  String               @id @default(cuid())
  email               String               @unique
  password            String?
  name                String?
  credits             Float
  playlistCollections PlaylistCollection[]
  role                Role

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?
}

model PlaylistCollection {
  id          String          @id @default(cuid())
  mediaType   MediaType
  description String
  prompt      String
  playlists   MusicPlaylist[]
  creatorId   String

  creator   User      @relation(fields: [creatorId], references: [id])
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?
}

model MusicPlaylist {
  id                   String @id @default(cuid())
  name                 String
  description          String
  playlistCollectionId String

  playlistCollection PlaylistCollection @relation(fields: [playlistCollectionId], references: [id])
  songs              Song[]
}

model Song {
  id              String @id @default(cuid())
  input           String
  musicPlaylistId String
  spotifyId       String
  /**
   * length          Float
   * band            String
   * datePublished   DateTime
   */

  musicPlaylist MusicPlaylist @relation(fields: [musicPlaylistId], references: [id])
}
